version: '3.3'

services:
  portal-service:
    image: tuancr/poc-machine-portal-node:latest
    stdin_open: true
    tty: true
    env_file:
      - ./deploy/.node-gateway.env
    networks:
      - poc-network 
    restart: always
    ports:
      - 3005:3003
    depends_on:
      - mock_postgres
      - rabbitmq
  poc-web-app:
    image: tuancr/poc-machine-web-app:latest
    stdin_open: true
    tty: true
    env_file:
      - ./deploy/.web-app.env
    networks:
      - poc-network 
    ports:
      - 3004:3000
    depends_on:
      - portal-service
    restart: always
  rabbitmq:
    image: rabbitmq:3-management
    restart: always
    volumes:
      - './deploy/rabbitmq/data/:/var/lib/rabbitmq/mnesia/'
      - './deploy/rabbitmq/init/:/var/lib/rabbitmq/init/'
    env_file:
      - ./deploy/rabbitmq/.example.env
    ports:
      - "5672:5672"
      - "15672:15672"
    command: sh /var/lib/rabbitmq/init/init.sh
    networks:
      - poc-network
  poc-machine-learning-consumer:
    restart: always
    image: tuancr/poc-machine-learning-service:latest
    command: "sh -c 'alembic upgrade head && python run-consumer.py'"
    stdin_open: true
    tty: true
    env_file:
      - ./deploy/.env
    depends_on:
      - mock_postgres
      - rabbitmq
    networks:
      - poc-network
  mock_postgres:
    container_name: mock_postgres 
    image: postgres
    env_file:
      - ./deploy/postgres/.example.env
    volumes:
      - ./deploy/postgres/data:/data/postgres
    ports:
      - "5434:5432"
    networks:
      - poc-network 
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', '${POSTGRES_USER}', '-d', '${POSTGRES_PASSWORD}']
      interval: 5s
      timeout: 5s
      retries: 5
networks:
  poc-network:
    external: false
    name: poc-network
